name: CI
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - master
      - ci
  pull_request:
    branches:
      - master
  merge_group:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CLICOLOR_FORCE: 1

jobs:
  ensure-readme-up-to-date:
    name: Ensure readme is up-to-date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.81.0
          profile: default
          override: true
      - uses: davidB/rust-cargo-make@v1
      - name: Make readme
        run: cargo make readme
      - name: Ensure no changes
        run: git diff --exit-code .

  nix-flake-test:
    name: Flake check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24

      - name: Cachix
        uses: cachix/cachix-action@v12
        with:
          name: ratatui-image-ci
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Flake check
        run: |
          nix flake show
          nix flake check --print-build-logs

  nix-build:
    name: Nix build
    runs-on: ubuntu-latest
    outputs:
      artifact_path: ${{ steps.upload-artifact.outputs.artifact_path }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24

      - name: Cachix
        uses: cachix/cachix-action@v12
        with:
          name: ratatui-image-ci
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build package
        run: |
          nix build . --print-build-logs

  nix-build-windows:
    name: Nix build (windows)
    runs-on: ubuntu-latest
    outputs:
      artifact_path: ${{ steps.upload-artifact.outputs.artifact_path }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24

      - name: Cachix
        uses: cachix/cachix-action@v12
        with:
          name: ratatui-image-ci
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build package
        run: |
          nix build .#windows --print-build-logs

  nix-flake-screenshot:
    name: Flake nixosTest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24

      - name: Cachix
        uses: cachix/cachix-action@v12
        with:
          name: ratatui-image-ci
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Flake kitty-screenshot-test-wayland
        run: |
          nix build .#checks.x86_64-linux.kitty-screenshot-test-wayland --print-build-logs

      - name: Upload screenshot artifact
        uses: actions/upload-artifact@v4
        with:
          name: kitty-wayland-screenshot
          path: result/kitty-wayland-screenshot.png
  
      - name: Upload screenshot to Gist
        id: gist_upload
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            if (!fs.existsSync('result/kitty-wayland-screenshot.png')) {
              core.setOutput('image_exists', 'false');
              return;
            }
            
            const imageBuffer = fs.readFileSync('result/kitty-wayland-screenshot.png');
            const imageBase64 = imageBuffer.toString('base64');
            
            try {
              // Create a gist with the image
              const gist = await github.rest.gists.create({
                files: {
                  'kitty-wayland-screenshot.png': {
                    content: imageBase64
                  }
                },
                public: false,
                description: `Screenshot from GitHub Actions run ${context.runId}`
              });
              
              const imageUrl = `https://gist.githubusercontent.com/${context.actor}/${gist.data.id}/raw/kitty-wayland-screenshot.png`;
              
              core.setOutput('image_exists', 'true');
              core.setOutput('image_url', imageUrl);
              core.setOutput('gist_url', gist.data.html_url);
              
              console.log(`Screenshot uploaded to: ${imageUrl}`);
            } catch (error) {
              console.error('Failed to upload to gist:', error);
              core.setOutput('image_exists', 'false');
              core.setOutput('upload_error', error.message);
            }
      
      - name: Comment PR with Gist screenshot
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && steps.gist_upload.outputs.image_exists == 'true'
        with:
          message: |
            ## üñºÔ∏è Wayland Screenshot Test Results
            
            Screenshot generated and uploaded successfully!
            
            ![Kitty Wayland Screenshot](${{ steps.gist_upload.outputs.image_url }})
            
            üìé **Links:**
            - üñºÔ∏è [Direct image link](${{ steps.gist_upload.outputs.image_url }})
            - üìÑ [Gist](${{ steps.gist_upload.outputs.gist_url }})
            - üì¶ [Artifact download](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
      
